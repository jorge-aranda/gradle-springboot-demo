buildscript {
    ext {
        springBootVersion = '1.4.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:" +
                "${springBootVersion}")

        // UtilizaciÃ³n de Docker con Spring Boot
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'gradle-springboot-demo'
    version = '0.2.0-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-amqp')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-integration')
    compile('org.springframework.integration:spring-integration-amqp')

    // To manage HATEOAS REST with HAL Browser
    compile('org.springframework.data:spring-data-rest-hal-browser')

    runtime('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

/* DOCKER PLUG-IN */
apply plugin: 'docker'

// Generates a docker image with latest APP version
task buildDockerContainer(type: Docker, dependsOn: build) {

    // Generated image uses this name:
    applicationName = jar.baseName

    // Dockerfile to use
    dockerfile     = file('src/main/docker/Dockerfile')

    // Copy your JAR into docker preparation folder
    doFirst {
        copy {
            from jar
            into stageDir
            rename {
                // Necessary to integrate with 'Dockerfile'
                filename -> filename.replace jar.archiveName, 'app.jar'
            }

        }
    }

}
/* DOCKER PLUG-IN */